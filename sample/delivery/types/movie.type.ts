/*
 * This file has been auto-generated by '@kontent-ai/model-generator@9.0.0-3'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Movie Database
 * Environment: Production
 * Id: da5abe9f-fdad-4168-97cd-b3464be2ccb9
 * 
 * -------------------------------------------------------------------------------
 */

import type { TypeCodenames } from './_types.js';
import type { Elements } from '@kontent-ai/delivery-sdk';
import type { ActorType } from './index.js';
import type { CoreType } from '../system/index.js';
import type { ReleaseCategoryTermCodenames } from '../taxonomies/index.js';

/*
 * Type representing codename of entity
 *
 * Name: Movie
 * Codename: movie
 * Type: Type
 */
export type MovieTypeCodename = Extract<TypeCodenames, 'movie'>;

/*
 * Type guard for Movie
 *
 * Name: Movie
 * Codename: movie
 * Type: Type
 */
export function isMovieTypeCodename(value: string | undefined | null): value is MovieTypeCodename {
	return typeof value === 'string' && value === ('movie' satisfies MovieTypeCodename);
}

/*
 * Movie
 *
 * Id: b0c0f9c2-ffb6-4e62-bac9-34e14172dd8c
 * Codename: movie
 */
export type MovieType = CoreType<
	MovieTypeElementCodenames,
	{
		/*
		 * Title
		 *
		 * Type: text
		 * Required: true
		 * Codename: title
		 * Id: 3473187e-dc78-eff2-7099-f690f7042d4a
		 */
		readonly title: Elements.TextElement;
		/*
		 * Plot
		 *
		 * Type: rich_text
		 * Required: false
		 * Codename: plot
		 * Id: f7ee4f27-27fd-a19b-3c5c-102aae1c50ce
		 */
		readonly plot: Elements.RichTextElement<CoreType>;
		/*
		 * Released
		 *
		 * Type: date_time
		 * Required: false
		 * Codename: released
		 * Id: 5ccf4644-0d65-5d96-9a32-f4ea21974d51
		 */
		readonly released: Elements.DateTimeElement;
		/*
		 * Length
		 *
		 * Type: number
		 * Required: false
		 * Codename: length
		 * Id: 7e8ecfab-a419-27ee-d8ec-8adb76fd007c
		 */
		readonly length: Elements.NumberElement;
		/*
		 * Poster
		 *
		 * Type: asset
		 * Required: false
		 * Codename: poster
		 * Id: a39a7237-9503-a1ae-8431-5b6cdb85ae9d
		 */
		readonly poster: Elements.AssetsElement;
		/*
		 * Category
		 *
		 * Type: multiple_choice
		 * Required: false
		 * Codename: category
		 * Id: 9821c252-6414-f549-c17f-cc171dd87713
		 */
		readonly category: Elements.MultipleChoiceElement<MovieTypeCategoryMultipleChoiceOptions>;
		/*
		 * Stars
		 *
		 * Type: modular_content
		 * Required: false
		 * Codename: stars
		 * Id: aa26a55d-19f8-7501-fea3-b0d9b1eeac71
		 */
		readonly stars: Elements.LinkedItemsElement<ActorType | MovieType>;
		/*
		 * SeoName
		 *
		 * Type: url_slug
		 * Required: false
		 * Codename: seoname
		 * Id: 756cc91a-a090-60f9-a7f0-f505bfbe046c
		 */
		readonly seoname: Elements.UrlSlugElement;
		/*
		 * ReleaseCategory
		 *
		 * Type: taxonomy
		 * Required: false
		 * Codename: releasecategory
		 * Id: 65f2fd44-1856-bc2b-17c2-decb0635e3d2
		 */
		readonly releasecategory: Elements.TaxonomyElement<ReleaseCategoryTermCodenames, 'releasecategory'>;
	},
	MovieTypeCodename
>;

/*
 * Type representing all available element codenames for Movie
 */
export type MovieTypeElementCodenames =
	| 'title'
	| 'plot'
	| 'released'
	| 'length'
	| 'poster'
	| 'category'
	| 'stars'
	| 'seoname'
	| 'releasecategory';

/*
 * Type guard for Movie
 *
 * Id: b0c0f9c2-ffb6-4e62-bac9-34e14172dd8c
 * Codename: movie
 */
export function isMovieType(item: CoreType | undefined | null): item is MovieType {
	return item?.system?.type === 'movie';
}

export type MovieTypeCategoryMultipleChoiceOptions =
	| 'sci_fi'
	| 'documentary'
	| 'action'
	| 'romance'
	| 'animation'
	| 'comedy'
	| 'adventure'
	| 'drama';
