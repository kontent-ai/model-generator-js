/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@{{version}}'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Movie Database
 * Environment: Production
 * Id: da5abe9f-fdad-4168-97cd-b3464be2ccb9
 * 
 * -------------------------------------------------------------------------------
 */

import type { TypeCodenames } from "./_types.js"
import type { Elements, IContentItem } from "@kontent-ai/delivery-sdk"
import type { ActorType } from "./index.js"
import type { CoreType } from "../system/index.js"
import type { ReleasecategoryTaxonomyTermCodenames, ReleasecategoryTaxonomyCodename } from "../taxonomies/index.js"

/*
 * Type representing codename of 'Movie' type
 */
export type MovieTypeCodename = keyof Pick<Record<TypeCodenames, null>, "movie">

/*
 * Typeguard for codename of 'Movie' type
 */
export function isMovieTypeCodename(value: string | undefined | null): value is MovieTypeCodename {
	return typeof value === "string" && value === ("movie" satisfies MovieTypeCodename)
}

/*
 * Movie
 *
 * Id: b0c0f9c2-ffb6-4e62-bac9-34e14172dd8c
 * Codename: movie
 */
export type MovieType = CoreType<
	MovieTypeElementCodenames,
	{
		/*
		 * Title
		 *
		 * Codename: title
		 * Id: 3473187e-dc78-eff2-7099-f690f7042d4a
		 * Type: text
		 * Required: true
		 */
		readonly title: Elements.TextElement

		/*
		 * Plot
		 *
		 * Codename: plot
		 * Id: f7ee4f27-27fd-a19b-3c5c-102aae1c50ce
		 * Type: rich_text
		 * Required: false
		 */
		readonly plot: Elements.RichTextElement<CoreType>

		/*
		 * Released
		 *
		 * Codename: released
		 * Id: 5ccf4644-0d65-5d96-9a32-f4ea21974d51
		 * Type: date_time
		 * Required: false
		 */
		readonly released: Elements.DateTimeElement

		/*
		 * Length
		 *
		 * Codename: length
		 * Id: 7e8ecfab-a419-27ee-d8ec-8adb76fd007c
		 * Type: number
		 * Required: false
		 */
		readonly length: Elements.NumberElement

		/*
		 * Poster
		 *
		 * Codename: poster
		 * Id: a39a7237-9503-a1ae-8431-5b6cdb85ae9d
		 * Type: asset
		 * Required: false
		 */
		readonly poster: Elements.AssetsElement

		/*
		 * Category
		 *
		 * Codename: category
		 * Id: 9821c252-6414-f549-c17f-cc171dd87713
		 * Type: multiple_choice
		 * Required: false
		 */
		readonly category: Elements.MultipleChoiceElement<MovieTypeCategoryMultipleChoiceOptions>

		/*
		 * Stars
		 *
		 * Codename: stars
		 * Id: aa26a55d-19f8-7501-fea3-b0d9b1eeac71
		 * Type: modular_content
		 * Required: false
		 * Allowed content types: actor, movie
		 */
		readonly stars: Elements.LinkedItemsElement<ActorType | MovieType>

		/*
		 * SeoName
		 *
		 * Codename: seoname
		 * Id: 756cc91a-a090-60f9-a7f0-f505bfbe046c
		 * Type: url_slug
		 * Required: false
		 */
		readonly seoname: Elements.UrlSlugElement

		/*
		 * ReleaseCategory
		 *
		 * Codename: releasecategory
		 * Id: 65f2fd44-1856-bc2b-17c2-decb0635e3d2
		 * Type: taxonomy
		 * Required: false
		 * Taxonomy: releasecategory
		 */
		readonly releasecategory: Elements.TaxonomyElement<ReleasecategoryTaxonomyTermCodenames, ReleasecategoryTaxonomyCodename>
	},
	MovieTypeCodename
>

/*
 * Type representing all available element codenames for Movie
 */
export type MovieTypeElementCodenames =
	| "title"
	| "plot"
	| "released"
	| "length"
	| "poster"
	| "category"
	| "stars"
	| "seoname"
	| "releasecategory"

/*
 * Type guard for Movie
 *
 * Id: b0c0f9c2-ffb6-4e62-bac9-34e14172dd8c
 * Codename: movie
 */
export function isMovieType(item: IContentItem | undefined | null): item is MovieType {
	return item?.system.type === ("movie" satisfies MovieTypeCodename)
}

export type MovieTypeCategoryMultipleChoiceOptions =
	| "sci_fi"
	| "documentary"
	| "action"
	| "romance"
	| "animation"
	| "comedy"
	| "adventure"
	| "drama"
