
/** 
* This file has been auto-generated by '@kontent-ai/model-generator@8.1.0'.
* 
* (c) Kontent.ai
*  
* -------------------------------------------------------------------------------
* 
* Project: Movie Database
* Environment: Production
* Id: da5abe9f-fdad-4168-97cd-b3464be2ccb9
* 
* -------------------------------------------------------------------------------
**/

import type { TaxonomyCodenames } from './core.taxonomy.js';

/**
 * Type representing codename of ReleaseCategory entity
 *
 * Codename: releasecategory
 * Id: 09b6a348-0f86-7a68-4af3-7cab9a5c60b7
 */
export type ReleaseCategoryTaxonomyCodename = Extract<TaxonomyCodenames, 'releasecategory'>;

/**
 * Type guard for ReleaseCategory entity
 *
 * Codename: releasecategory
 * Id: 09b6a348-0f86-7a68-4af3-7cab9a5c60b7
 */
export function isReleaseCategoryTaxonomyCodename(value: string | undefined | null): value is ReleaseCategoryTaxonomyCodename {
    return typeof value === 'string' && value === ('releasecategory' satisfies ReleaseCategoryTaxonomyCodename);
}

/**
 * Object with all values of taxonomy term codenames in ReleaseCategory
 */
export const releaseCategoryTaxonomyTermCodenames = ['global_release', 'us_only', 'local_release'] as const;

/**
 * Type representing taxonomy term codenames in ReleaseCategory
 */
export type ReleaseCategoryTaxonomyTermCodenames = (typeof releaseCategoryTaxonomyTermCodenames)[number];

/**
 * Type guard for taxonomy term codenames in ReleaseCategory
 */
export function isReleaseCategoryTaxonomyTermCodename(value: string | undefined | null): value is ReleaseCategoryTaxonomyTermCodenames {
    return typeof value === 'string' && (releaseCategoryTaxonomyTermCodenames as readonly string[]).includes(value);
}
