/*
 * This file has been auto-generated by '@kontent-ai/model-generator@9.0.0-3'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Movie Database
 * Environment: Production
 * Id: da5abe9f-fdad-4168-97cd-b3464be2ccb9
 * 
 * -------------------------------------------------------------------------------
 */

import type { TaxonomyCodenames } from './_taxonomies.js';

/*
 * Type representing codename of entity
 *
 * Name: ReleaseCategory
 * Codename: releasecategory
 * Type: Taxonomy
 */
export type ReleaseCategoryTaxonomyCodename = Extract<TaxonomyCodenames, 'releasecategory'>;

/*
 * Type guard for ReleaseCategory
 *
 * Name: ReleaseCategory
 * Codename: releasecategory
 * Type: Taxonomy
 */
export function isReleaseCategoryTaxonomyCodename(value: string | undefined | null): value is ReleaseCategoryTaxonomyCodename {
	return typeof value === 'string' && value === ('releasecategory' satisfies ReleaseCategoryTaxonomyCodename);
}

/*
 * Array of all codenames
 *
 * Name: ReleaseCategory
 * Type: Taxonomy term
 */
export const releaseCategoryTermCodenames = ['global_release', 'us_only', 'local_release'] as const;

/*
 * Type representing all codenames
 *
 * Name: ReleaseCategory
 * Type: Taxonomy term
 */
export type ReleaseCategoryTermCodenames = (typeof releaseCategoryTermCodenames)[number];

/*
 * Typeguard for codename
 *
 * Name: ReleaseCategory
 * Type: Taxonomy term
 */
export function isReleaseCategoryTermCodename(value: string | undefined | null): value is ReleaseCategoryTermCodenames {
	return typeof value === 'string' && (releaseCategoryTermCodenames as readonly string[]).includes(value);
}
